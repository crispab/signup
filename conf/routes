# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                 se.crisp.signup4.controllers.Application.index
GET         /login                            se.crisp.signup4.controllers.Application.showLoginForm
POST        /login                            se.crisp.signup4.controllers.Application.authenticate
GET         /logout                           se.crisp.signup4.controllers.Application.logout

GET         /sociallogin/:provider            se.crisp.signup4.controllers.SocialLogin.authenticate(provider)

# Users
GET         /users/new                        se.crisp.signup4.controllers.Users.createForm
GET         /users/newMember                  se.crisp.signup4.controllers.Users.createMemberForm(groupId: Long)
GET         /users/newGuest                   se.crisp.signup4.controllers.Users.createGuestForm(eventId: Long)
GET         /users/:id/edit                   se.crisp.signup4.controllers.Users.updateForm(id: Long)
GET         /users/:id/updateImage            se.crisp.signup4.controllers.Users.updateImageForm(id: Long)
POST        /users/:id/resetImage             se.crisp.signup4.controllers.Users.resetImage(id: Long)
POST        /users/:id/uploadImage            se.crisp.signup4.controllers.Users.uploadImage(id: Long)
POST        /users                            se.crisp.signup4.controllers.Users.create
POST        /users/newMember/:groupId         se.crisp.signup4.controllers.Users.createMember(groupId: Long)
POST        /users/newGuest/:eventId          se.crisp.signup4.controllers.Users.createGuest(eventId: Long)
POST        /users/:id                        se.crisp.signup4.controllers.Users.update(id: Long)
POST        /users/:id/delete                 se.crisp.signup4.controllers.Users.delete(id: Long)
POST        /users/:id/remind                 se.crisp.signup4.controllers.Users.remindParticipant(id: Long, eventId: Long)
GET         /users                            se.crisp.signup4.controllers.Users.list
GET         /users/:id                        se.crisp.signup4.controllers.Users.show(id: Long)


# Groups
GET         /groups/new                       se.crisp.signup4.controllers.Groups.createForm
GET         /groups/:id/edit                  se.crisp.signup4.controllers.Groups.updateForm(id: Long)
POST        /groups                           se.crisp.signup4.controllers.Groups.create
POST        /groups/:id                       se.crisp.signup4.controllers.Groups.update(id: Long)
POST        /groups/:id/delete                se.crisp.signup4.controllers.Groups.delete(id: Long)
GET         /groups                           se.crisp.signup4.controllers.Groups.list
GET         /groups/:id                       se.crisp.signup4.controllers.Groups.show(id: Long, showAll: Boolean ?= false)


# Memberships
GET         /memberships/new                  se.crisp.signup4.controllers.Memberships.createForm(groupId: Long)
POST        /memberships                      se.crisp.signup4.controllers.Memberships.create
POST        /memberships/:id/delete           se.crisp.signup4.controllers.Memberships.delete(id: Long)


# Events
GET         /events/new                       se.crisp.signup4.controllers.Events.createForm(groupId: Long)
GET         /events/:id/edit                  se.crisp.signup4.controllers.Events.updateForm(id: Long)
POST        /events                           se.crisp.signup4.controllers.Events.create
POST        /events/:id                       se.crisp.signup4.controllers.Events.update(id: Long)
POST        /events/:id/cancel                se.crisp.signup4.controllers.Events.cancel(id: Long)
POST        /events/:id/delete                se.crisp.signup4.controllers.Events.delete(id: Long)
POST        /events/:id/remind                se.crisp.signup4.controllers.Events.remindParticipants(id: Long)
GET         /events/:id                       se.crisp.signup4.controllers.Events.show(id: Long)
GET         /events/:id/excel                 se.crisp.signup4.controllers.Events.asExcel(id: Long)
GET         /events/:id/remind/email          se.crisp.signup4.controllers.Events.asEmailReminder(id: Long, userId: Long)
GET         /events/:id/cancel/email          se.crisp.signup4.controllers.Events.asEmailCancellation(id: Long, userId: Long)
GET         /events/:id/remind/slack          se.crisp.signup4.controllers.Events.asSlackReminder(id: Long)
GET         /events/:id/cancel/slack          se.crisp.signup4.controllers.Events.asSlackCancellation(id: Long)


# Participations
GET         /participations/newGuest          se.crisp.signup4.controllers.Participations.createGuestForm(eventId: Long)
POST        /participations/newGuest          se.crisp.signup4.controllers.Participations.createGuest
POST        /participations/:id/delete        se.crisp.signup4.controllers.Participations.delete(id: Long)
GET         /participations/edit              se.crisp.signup4.controllers.Participations.editForm(eventId: Long, userId: Long)
POST        /participations                   se.crisp.signup4.controllers.Participations.createOrUpdate


# Map static resources from the /public folder to the /assets URL path
GET         /robots.txt                       controllers.Assets.at(path="/public", file="robots.txt")
GET         /assets/*file                     controllers.Assets.at(path="/public", file)


